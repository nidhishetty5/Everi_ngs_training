
<!--<h1>welcome {{55 + 66}}</h1>
<h1>welcome,my dear {{namVar | lowercase}}</h1>
<h1>welcome,my dear {{namVar | uppercase}}</h1>
<h1>welcome,my dear {{namVar | slice:0:3}}</h1>
<h1>welcome,my dear {{firstname + " " + lastname}}</h1>
<h1>welcome,my dear <u>{{firstname}}</u> {{lastname}}</h1>
<h1>welcome,my dear <s> Shetty</s></h1>
<div *ngIf="tymVar<12; then morning else afternoon"></div>
  <ng-template #morning>
    <p>Good Morning</p>
  </ng-template>
  <ng-template #afternoon>
    <p>Good Afternoon</p>
  </ng-template>
<h2>must visit places</h2>
  <div>
<li *ngFor="let ItmVar of tripAryVar"> {{ ItmVar }}</li> 
<span *ngFor="let ItmVar of tripAryVar; let IdxVar=index">{{IdxVar+1}} {{ ItmVar }}
<li *ngIf="!ItmVar.includes('Beach')">
{{IdxVar+1}} {{ ItmVar}}
</li>
</span>
 </div> -->
 <table border="1">
  <tr>
    <th>Name</th>
    <th>Prod</th>
    <th>Cost</th>
  </tr>
  <tr *ngFor="let ItmVar of prodAryVar.sort(sortByName).sort(sortByProd).sort(sortByCost)">
  <td>{{ItmVar.NamVak}}</td>
  <td>{{ItmVar.Prod}}</td>
  <td>{{ItmVar.Cost}}</td>
</tr>
<!--<tr *ngFor="let ItmVar of filterCost()">
  <td>{{ItmVar.NamVak}}</td>
  <td>{{ItmVar.Prod}}</td>
  <td>{{toShort(ItmVar.Cost)}}</td>
</tr>
<tr>
<th colspan="2">TotalCost</th>
<td>{{TotalCost()}}</td>
<td>{{toShort(TotalCost())}}</td>
</tr> -->
<tr *ngFor="let ItmVar of filterCost()">
  <td>{{ItmVar.NamVak}}</td>
  <td>{{ItmVar.Prod}}</td>
  <td>{{getAbr(ItmVar.Cost)}}</td>
</tr>
<tr>
<th colspan="2">TotalCost</th>
<!--<td>{{TotalCost()}}</td> -->
<td>â‚¹{{getAbr(TotalCost())}}</td>

 </table>
 <ng-container [ngSwitch]="SeasonVar">
  <div *ngSwitchCase="'Summer'">Goa</div>
  <div *ngSwitchCase="'Winter'">OOTY</div>
  <div *ngSwitchCase="'Rainy'">Kerla</div>
  <div *ngSwitchCase="'Spring'">Manali</div>
  <div *ngSwitchDefault> Dft Tst Txt</div>
 </ng-container>

 <button (click)="NamBtnKlkFnc()">
  Dare to Click me
 </button> 
 <div class="list" (dragover)="onDragOver($event)" (drop)="onDrop($event, listOne, listTwo)">
  <div class="list-item"
       *ngFor="let item of listOne"
       draggable="true"
       (dragstart)="onDragStart($event, item)">
    {{ item }}
  </div>
</div>
 
<div class="list" (dragover)="onDragOver($event)" (drop)="onDrop($event, listTwo, listOne)">
  <div class="list-item"
       *ngFor="let item of listTwo"
       draggable="true"
       (dragstart)="onDragStart($event, item)">
    {{ item }}
  </div>
</div>
<div [ngClass]="{greenThemeCls: StsVar}">
  <h1>ng Class with theme</h1>
</div>
<!-- 
<div [ngClass]="StsVar? 'greenThemesCls': 'purpleThemeCls'">
  <h1>ng class with ternary cond</h1>
  <button (click)="ChgThmFnc()">change</button>
</div> -->
 

 
<div [ngStyle]="{'background-color': currentColor}">
  <h1>Background Color Changer</h1>
</div>
      
     



 <label>
    <input type="number" 
    name="MblIptVav" 
    #MblIptVav="ngModel"
      [(ngModel)]="FomIptVar.MblIptVak" 
      placeholder="Enter Mobile"
      pattern="[6-9][0-9]{9}">
      <div *ngIf="MblIptVav.invalid && 
    (MblIptVav.touched || MblIptVav.dirty)" class="ErrMsgCls">
      <span *ngIf="MblIptVav.errors?.required">Mobile is required.</span>
      <span *ngIf="MblIptVav.errors?.pattern">Enter valid mobile</span>
    </div>
  </label>
  <br>
  <br>
  <label>
  <input type="email"
    name="MylIptVav" 
    #MylIptVav="ngModel" 
    [(ngModel)]="FomIptVar.MylIptVak" 
    placeholder="Enter Email"
    required
    email>
  <div *ngIf="MylIptVav.invalid && 
    (MylIptVav.touched || MylIptVav.dirty)" class="ErrMsgCls">
      <span *ngIf="MylIptVav.errors?.required">Email is required.</span>
      <span *ngIf="MylIptVav.errors?.email">Enter valid email</span>
    </div>
  </label>
  <br>
  <br>



  
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterOutlet } from '@angular/router';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [RouterOutlet, CommonModule, FormsModule],
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
 
export class AppComponent {
  FomIptVar = {
    NamIptVak: ''
  };
  
  ToDoAryVar: string[] = [
    "Play Cricket",
    "Watch Movie",
    "Pilgrimage Center",
    "Meditation",
    "Sleep"
  ];
  editIndex: number | null = null;
      //this.ToDoAryVar.push(this.FomIptVar.NamIptVak);
      //this.ToDoAryVar.unshift(this.FomIptVar.NamIptVak);
      //add an item
      //this.ToDoAryVar.splice(2,0),
      //this.FomIptVar.NamIptVak = '';  
       // this.TodoAryVar.unshift(
    //   this.FomIptVar.NamIptVak)
    
    // Del an item using splice
    // this.TodoAryVar.splice(2,1)

    // Add an item using splice
    // this.TodoAryVar.splice(2,0,
    //   this.FomIptVar.NamIptVak)

    // Update an item using splice
      addToDo() {
    if (this.FomIptVar.NamIptVak) {
      if (this.editIndex !== null) {
        // Update existing item
        this.ToDoAryVar[this.editIndex] = this.FomIptVar.NamIptVak;
        this.editIndex = null;
      } else {
        // Add new item
        this.ToDoAryVar.push(this.FomIptVar.NamIptVak);
      }
      this.FomIptVar.NamIptVak = '';  // Clear input field
    }
  }

  editToDo(index: number) {
    this.editIndex = index;
    this.FomIptVar.NamIptVak = this.ToDoAryVar[index];
  }

  deleteToDo(index: number) {
    this.ToDoAryVar.splice(index, 1);
  }
}
